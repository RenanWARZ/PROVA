///// CLASS veículo /////
public abstract class Veiculo {
    private String placa;
    private String modelo;

    public Veiculo(String placa, String modelo) {
        this.placa = placa;
        this.modelo = modelo;
    }

    public String getPlaca() {
        return placa;
    }

    public String getModelo() {
        return modelo;
    }

    public void setModelo(String modelo) {
        this.modelo = modelo;
    }

    public abstract void exibirInfo();
}


//// Carro /////
public class Carro extends Veiculo {
    private int portas;

    public Carro(String placa, String modelo, int portas) {
        super(placa, modelo);
        this.portas = portas;
    }

    @Override
    public void exibirInfo() {
        System.out.println("Carro - Placa: " + getPlaca() + ", Modelo: " + getModelo() + ", Portas: " + portas);
    }
}

/// Moto ////
public class Moto extends Veiculo {
    private int cilindradas;

    public Moto(String placa, String modelo, int cilindradas) {
        super(placa, modelo);
        this.cilindradas = cilindradas;
    }

    @Override
    public void exibirInfo() {
        System.out.println("Moto - Placa: " + getPlaca() + ", Modelo: " + getModelo() + ", Cilindradas: " + cilindradas);
    }
}

///// CRUD /////

import java.util.*;

public class SistemaVeiculos {
    private static List<Veiculo> veiculos = new ArrayList<>();
    private static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        int opcao;
        do {
            System.out.println("\n--- Menu ---");
            System.out.println("1. Adicionar veículo");
            System.out.println("2. Listar veículos");
            System.out.println("3. Atualizar veículo");
            System.out.println("4. Remover veículo");
            System.out.println("0. Sair");
            System.out.print("Escolha: ");
            opcao = sc.nextInt(); sc.nextLine();

            switch (opcao) {
                case 1 -> adicionarVeiculo();
                case 2 -> listarVeiculos();
                case 3 -> atualizarVeiculo();
                case 4 -> removerVeiculo();
                case 0 -> System.out.println("Saindo...");
                default -> System.out.println("Opção inválida.");
            }
        } while (opcao != 0);
    }

    private static void adicionarVeiculo() {
        System.out.print("Tipo (carro/moto): ");
        String tipo = sc.nextLine().toLowerCase();
        System.out.print("Placa: ");
        String placa = sc.nextLine();
        System.out.print("Modelo: ");
        String modelo = sc.nextLine();

        if (tipo.equals("carro")) {
            System.out.print("Número de portas: ");
            int portas = sc.nextInt(); sc.nextLine();
            veiculos.add(new Carro(placa, modelo, portas));
        } else if (tipo.equals("moto")) {
            System.out.print("Cilindradas: ");
            int cilindradas = sc.nextInt(); sc.nextLine();
            veiculos.add(new Moto(placa, modelo, cilindradas));
        } else {
            System.out.println("Tipo inválido.");
        }
    }

    private static void listarVeiculos() {
        if (veiculos.isEmpty()) {
            System.out.println("Nenhum veículo cadastrado.");
            return;
        }
        for (Veiculo v : veiculos) {
            v.exibirInfo();
        }
    }

    private static void atualizarVeiculo() {
        System.out.print("Placa do veículo a atualizar: ");
        String placa = sc.nextLine();
        for (Veiculo v : veiculos) {
            if (v.getPlaca().equalsIgnoreCase(placa)) {
                System.out.print("Novo modelo: ");
                String novoModelo = sc.nextLine();
                v.setModelo(novoModelo);
                System.out.println("Modelo atualizado.");
                return;
            }
        }
        System.out.println("Veículo não encontrado.");
    }

    private static void removerVeiculo() {
        System.out.print("Placa do veículo a remover: ");
        String placa = sc.nextLine();
        Iterator<Veiculo> it = veiculos.iterator();
        while (it.hasNext()) {
            Veiculo v = it.next();
            if (v.getPlaca().equalsIgnoreCase(placa)) {
                it.remove();
                System.out.println("Veículo removido.");
                return;
            }
        }
        System.out.println("Veículo não encontrado.");
    }
}